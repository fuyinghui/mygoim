go run -mod=mod entgo.io/ent/cmd/ent generate ./db/ent/schema


docker network create im-net
docker network create goim-net --driver bridge
docker run -d --name zookeeper-server -p 2181:2181 --network goim-net -e ALLOW_ANONYMOUS_LOGIN=yes bitnami/zookeeper:latest
docker run -d --name kafka-server  --network goim-net -p 9092:9092  -e ALLOW_PLAINTEXT_LISTENER=yes -e KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-server:2181 -e KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://172.19.204.252:9092 bitnami/kafka:latest
docker exec -it 9b9aec7ae01d /bin/bash
 cd /opt/bitnami/kafka/bin
kafka-topics.sh --create --bootstrap-server localhost:9092 --topic topictest1 --partitions 1 --replication-factor 1
docker run -d --name kafka-server  --network goim-net -p 9092:9092  -e ALLOW_PLAINTEXT_LISTENER=yes  -e KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-server:2181 -e KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://172.19.204.252:9092 -v /usr/local/bitnami/kafka/config:/opt/bitnami/kafka/config -v /usr/local/bitnami/kafka/logs:/opt/bitnami/kafka/logs bitnami/kafka:latest
-v /usr/local/bitnami/kafka/config:/opt/bitnami/kafka/config
-v /usr/local/bitnami/kafka/logs:/opt/bitnami/kafka/logs

docker build -t registry.cn-hangzhou.aliyuncs.com/meta-yzcy/discovery:1.2 .
docker push registry.cn-hangzhou.aliyuncs.com/meta-yzcy/discovery:1.2 
docker pull registry.cn-hangzhou.aliyuncs.com/meta-yzcy/discovery:1.2 
docker run -d --name discovery-server --network goim-net -p 7171:7171 -t registry.cn-hangzhou.aliyuncs.com/meta-yzcy/discovery:1.2

go run main.go -conf comet-example.toml -region=sh -zone=sh001 deploy.env=dev -weight=10    

Makefile文件
cp cmd/discovery/discovery-example.toml dist/conf/discovery.toml改cp cmd/discovery/discovery.toml dist/conf/discovery.toml
docker运行报错
flag provided but not defined: -confkey
Dockerfile最后一行
由CMD  /app/bin/discovery -conf /app/conf/  -confkey discovery.toml改为CMD  /app/bin/discovery -conf /app/conf/  discovery.toml

docker logs -f --tail 100 discovery-server


docker run -d --name goim-comet-server --network goim-net -p 3101:3101 -p 3102:3102 -p 3109:3109 -t registry.cn-hangzhou.aliyuncs.com/meta-yzcy/goim-comet:2.1.9
docker run -d --name goim-logic-server --network goim-net -p 3111:3111  -p 3119:3119 -t registry.cn-hangzhou.aliyuncs.com/meta-yzcy/goim-logic:2.1.9
docker run -d --name goim-jobserver --network goim-net -t registry.cn-hangzhou.aliyuncs.com/meta-yzcy/goim-job:2.1.9

kafka启动
docker run -d --restart=always --log-driver json-file --log-opt max-size=100m --log-opt max-file=2  --name zookeeper-server --network goim-net -p 2181:2181 -v /etc/localtime:/etc/localtime wurstmeister/zookeeper
docker run -d --restart=always --log-driver json-file --log-opt max-size=100m --log-opt max-file=2 --name kafka-server  --network goim-net -p 9092:9092 -e KAFKA_BROKER_ID=0 -e KAFKA_ZOOKEEPER_CONNECT=zookeeper-server:2181/kafka -e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-server:9092 -e KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092 -v /etc/localtime:/etc/localtime wurstmeister/kafka
docker exec -i -t kafka-server bash
 cd /opt/kafka/bin/
 ./kafka-console-producer.sh --broker-list localhost:9092 --topic sun
>{"datas":[{"channel":"","metric":"temperature","producer":"ijinus","sn":"IJA0101-00002245","time":"1543207156000","value":"80"}],"ver":"1.0"}